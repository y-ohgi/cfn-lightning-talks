AWSTemplateFormatVersion: '2010-09-09'
Description: VPC Template

Parameters:
  Prefix:
    Type: String
  VPCCidr:
    Type: String
    Default: 10.0.0.0/16
  SubnetPublic1aCidr:
    Type: String
    Default: 10.0.1.0/24
  SubnetPublic1cCidr:
    Type: String
    Default: 10.0.2.0/24
  SubnetPrivate1aCidr:
    Type: String
    Default: 10.0.101.0/24
  SubnetPrivate1cCidr:
    Type: String
    Default: 10.0.102.0/24
    
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Join ['-', ['alb', !Ref Prefix]]

  IGW:
    Type: "AWS::EC2::InternetGateway"
    Properties: 
      Tags:
        - Key: Name
          Value: !Join ['-', ['igw', !Ref Prefix]]

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ['-', ['rtb', !Ref Prefix, 'web']]

  IGWRoute:
    Type: AWS::EC2::Route
    DependsOn: IGW
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
          
  SubnetPublic1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetPublic1aCidr
      AvailabilityZone: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join ['-', ['sb', !Ref Prefix, 'public1a']]
  SubnetPublic1aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublic1a
      RouteTableId: !Ref PublicRouteTable

  SubnetPublic1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetPublic1cCidr
      AvailabilityZone: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join ['-', ['sb', !Ref Prefix, 'public1c']]
  SubnetPublic1cRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublic1c
      RouteTableId: !Ref PublicRouteTable

  SubnetPrivate1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetPrivate1aCidr
      AvailabilityZone: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join ['-', ['sb', !Ref Prefix, 'private1a']]

  SubnetPrivate1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetPrivate1cCidr
      AvailabilityZone: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join ['-', ['sb', !Ref Prefix, 'private1c']]

Outputs:
  VPCId:
    Value: !Ref VPC
    Export:
      Name: !Join ['-', [!Ref Prefix, 'VPCId']]

  SubnetPublic1aId:
    Value: !Ref SubnetPublic1a
    Export:
      Name: !Join ['-', [!Ref Prefix, 'SubnetPublic1a']]
  SubnetPublic1cId:
    Value: !Ref SubnetPublic1c
    Export:
      Name: !Join ['-', [!Ref Prefix, 'SubnetPublic1c']]

  SubnetPrivate1aId:
    Value: !Ref SubnetPrivate1a
    Export:
      Name: !Join ['-', [!Ref Prefix, 'SubnetPrivate1a']]
  SubnetPrivate1cId:
    Value: !Ref SubnetPrivate1c
    Export:
      Name: !Join ['-', [!Ref Prefix, 'SubnetPrivate1c']]
